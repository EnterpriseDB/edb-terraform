locals {
  region_az_networks = {
    for region, region_spec in var.regions: region => {
      for az, network in region_spec.azs: az => network
    }
  }
  region_machines = {
    for name, machine_spec in var.machines: machine_spec.region => {
      name = name
      spec = machine_spec
    }...
  }
  region_databases = {
    for name, database_spec in var.databases: database_spec.region => {
      name = name
      spec = database_spec
    }...
  }
  region_alloys = {
    for name, spec in var.alloy: spec.region => {
      name = name
      spec = spec
    }...
  }
}

resource "random_id" "apply" {
  byte_length = 4
}

{% for region in regions.keys() %}
{%   set region_ = region | replace('-', '_') %}

{%   if has_regions %}
{%     include "network.tf.j2" %}
{%   endif %}

{%   if has_machines %}
{%     include "key_pair.tf.j2" %}

{%     include "machine.tf.j2" %}
{%   endif %}

{%  if has_databases %}
{%    include "database.tf.j2" %}
{%  endif %}

{%   if has_alloy %}
{%     include "alloy.tf.j2" %}
{%   endif %}

{% endfor %}

{% if has_region_peering %}
{%   include "region_peering.tf.j2" %}
{% endif %}

resource "local_file" "servers_yml" {
  filename        = "${abspath(path.root)}/servers.yml"
  file_permission = "0600"
  content         = <<-EOT
---
servers:
{% if machine_regions | length > 0 %}
  machines:
{% endif %}
{% for region in machine_regions %}
{% set region_ = region | replace('-', '_') %}
{% set module_ = "module.machine_" ~ region_  %}
%{for key, value in {{ module_ }} ~}
    ${key}:
      type: ${ value.machine_ips.type }
      region: ${ value.machine_ips.region }
      az: ${ value.machine_ips.az }
      public_ip: ${ value.machine_ips.public_ip }
      private_ip: ${ value.machine_ips.private_ip }
%{endfor~}
{% endfor %}
{% if database_regions | length > 0 %}
  databases:
{% endif %}
{% for region in database_regions %}
{% set region_ = region | replace('-', '_') %}
{% set module_ = "module.database_" ~ region_  %}
%{for key, value in {{module_}} ~}
    ${key}:
      region: ${ value.database_ips.region }
      username: ${ value.database_ips.username }
      password: ${ value.database_ips.password }
      address: ${ value.database_ips.address }
      port: ${ value.database_ips.port }
      dbname: ${ value.database_ips.dbname }
%{endfor~}
{% endfor %}
{% if alloy_regions | length > 0 %}
  alloy:
{% endif %}
{% for region in alloy_regions %}
{% set region_ = region | replace('-', '_') %}
{% set module_ = "module.alloy_" ~ region_ %}
%{for key, value in {{module_}} ~}
    ${key}:
      region: ${ value.ips.region }
      username: ${ value.ips.username }
      password: ${ value.ips.password }
      address: ${ value.ips.address }
      port: ${ value.ips.port }
      dbname: ${ value.ips.dbname }
%{endfor~}
{% endfor %}
    EOT
}
