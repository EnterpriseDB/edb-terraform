module "vpc_{{ region_ }}"{
  source = "./modules/vpc"

  name          = "${var.vpc_tag}-{{ region }}-${module.spec.hex_id}"
  cidr_blocks = [ lookup(lookup(module.spec.base.regions, "{{ region }}"), "cidr_block") ]
  region = "{{ region }}"

  providers = {
    azurerm = azurerm.{{ region_ }}
  }

  depends_on = [ null_resource.validation ]
}

module "network_{{ region_ }}" {
  source = "./modules/network"

  for_each = lookup(module.spec.region_zone_networks, "{{ region }}", null)
  
  resource_name   = module.vpc_{{ region_ }}.resource_name
  network_name    = module.vpc_{{ region_ }}.network_name
  region          = module.vpc_{{ region_ }}.region
  zone            = each.value.zone
  ip_cidr_range   = [ each.value.cidr ]
  name            = "{{region}}-${each.key}-${module.spec.hex_id}"

  depends_on = [module.vpc_{{ region_ }}]

  providers = {
    azurerm = azurerm.{{ region_ }}
  }
}

module "security_{{ region_ }}" {
  source = "./modules/security"

  for_each = lookup(module.spec.region_zone_networks, "{{ region }}", null)

  subnet_id         = module.network_{{ region_ }}[each.key].subnet_id
  zone              = each.key
  name_id           = module.spec.hex_id
  region            = module.vpc_{{ region_ }}.region
  resource_name     = module.vpc_{{ region_ }}.resource_name
  ports             = try(module.spec.region_ports["{{ region }}"], [])
  ingress_cidrs     = module.spec.region_cidrblocks
  egress_cidrs      = module.spec.region_cidrblocks

  depends_on = [module.network_{{ region_ }}]

  providers = {
    azurerm = azurerm.{{ region_ }}
  }
}
