module "vpc_{{ region_ }}"{
  source = "./modules/vpc"

  name          = "${var.vpc_tag}-{{ region }}-${module.spec.hex_id}"
  cidr_blocks = [ lookup(lookup(module.spec.value.regions, "{{ region }}"), "cidr_block") ]
  region = "{{ region }}"

  providers = {
    azurerm = azurerm.{{ region_ }}
  }

  depends_on = [ null_resource.validation ]
}

module "network_{{ region_ }}" {
  source = "./modules/network"

  for_each = lookup(module.spec.region_zone_networks, "{{ region }}", null)
  
  resource_name   = module.vpc_{{ region_ }}.resource_name
  network_name    = module.vpc_{{ region_ }}.network_name
  region          = module.vpc_{{ region_ }}.region
  zone            = tostring(each.key) == "0" ? null : each.key
  ip_cidr_range   = [ each.value ]
  name            = "{{region}}-${each.key}-${module.spec.hex_id}"

  depends_on = [module.vpc_{{ region_ }}]

  providers = {
    azurerm = azurerm.{{ region_ }}
  }
}

module "security_{{ region_ }}" {
  source = "./modules/security"

  for_each = lookup(module.spec.region_zone_networks, "{{ region }}", null)

  subnet_id         = module.network_{{ region_ }}[each.key].subnet_id
  region            = module.vpc_{{ region_ }}.region
  resource_name     = module.vpc_{{ region_ }}.resource_name
  service_name      = "service-{{ region }}-${each.key}-${module.spec.hex_id}"
  service_ports     = lookup(lookup(module.spec.value.regions, "{{ region }}", null), "service_ports", [])
  public_cidrblock  = var.public_cidrblock
  region_name       = "region-{{ region }}-${each.key}-${module.spec.hex_id}"
  region_ports      = lookup(lookup(module.spec.value.regions, "{{ region }}", null), "region_ports", [])
  region_cidrblocks = flatten([
    for region in try(module.spec.value.regions, []) : [
      for ip_cidr in try(region.zones, []) : ip_cidr
      ] 
    ])

  depends_on = [module.network_{{ region_ }}]

  providers = {
    azurerm = azurerm.{{ region_ }}
  }
}
