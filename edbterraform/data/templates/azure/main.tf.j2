locals {
  region_az_networks = {
    for region, region_spec in var.regions: region => {
      for zone, network in try(region_spec.zones, {}): zone => network
      }
    }
  region_machines = {
    for name, machine_spec in var.machines: machine_spec.region => {
      name = name
      spec = machine_spec
    }...
  }
  region_kubernetes = {
    for name, spec in var.kubernetes: spec.region => {
      name = name
      spec = spec
    }...
  }
}

resource "random_id" "apply" {
  byte_length = 4
}

resource "random_pet" "name" {
}

{% if has_machines %}
{%   include "agreements.tf.j2" %}
{% endif %}

{% for region in regions.keys() %}
{%   set region_ = region | replace('-', '_') %}

{%   if has_regions %}
{%     include "network.tf.j2" %}
{%   endif %}

{%   if has_machines or has_kubernetes %}
{%     include "key_pair.tf.j2" %}
{%   endif %}

{%   if has_machines %}
{%     include "machine.tf.j2" %}
{%   endif %}

{%   if has_kubernetes %}
{%     include "kubernetes.tf.j2" %}
{%   endif %}

{% endfor %}

{% if has_region_peering %}
{%   include "region_peering.tf.j2" %}
{% endif %}

resource "local_file" "servers_yml" {
  filename        = "${abspath(path.root)}/servers.yml"
  file_permission = "0600"
  content         = <<-EOT
---
servers:
{% set boxes = {
  'machines': { 
    'active': has_machines,
    'regions': machine_regions,
    'module_base': 'module.machine_',
  },
  'kubernetes': {
    'active': has_kubernetes,
    'regions': kubernetes_regions,
    'module_base': "module.kubernetes_",
  }
} %}
{% for type, attributes in boxes.items() if attributes["active"] %}
  {{type}}:
{%   for region in attributes["regions"] -%}
{%   set module = attributes["module_base"] ~ region | replace('-', '_') %}
%{ for key, value in {{ module }} ~}
    ${key}:
%{   for name, item in value ~}
      ${name}: ${try(jsonencode(item), "Error, unsupported type",)}
%{   endfor ~}
%{ endfor ~}
{%   endfor %}
{% endfor %}
    EOT
}

{% for type, attributes in boxes.items() if attributes["active"] %}
output "{{type}}" {
  value = [
{%   for region in attributes["regions"] -%}
{%   set module = attributes["module_base"] ~ region | replace('-', '_') %}
    {{ module }}[*],
{%   endfor %}
  ]
  sensitive = true
}
{% endfor %}

