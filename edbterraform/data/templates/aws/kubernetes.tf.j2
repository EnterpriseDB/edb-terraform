module "kubernetes_{{ region_ }}" {
  source = "./modules/kubernetes"

  for_each = { for rm in lookup(module.spec.region_kubernetes, "{{ region }}", []) : rm.name => rm }

  region                  = each.value.spec.region
  desiredCapacity         = each.value.spec.node_count
  vpcAndClusterPrefix     = "${module.spec.value.tags.cluster_name}-${module.spec.pet_name}"  
  instanceType            = each.value.spec.instance_type

  providers = {
    aws = aws.{{ region_ }}
    kubernetes = kubernetes.{{ region_ }}
  }

# This statement works for: Azure Kubernetes Services and Google Kubernetes Engine
# TODO: Future versions of AWS Elastic Kubernetes Services might support it.
#       Check on any updates that occur to AWS EKS Modules versions.
#       This bug causes 'terraform plan' to fail since it forces aws k8s modules variable casting issues
#       Refer to: https://support.hashicorp.com/hc/en-us/articles/4408936406803-Kubernetes-Provider-block-fails-with-connect-connection-refused-
#       Link to issue being tracked by Terraform Team: https://github.com/hashicorp/terraform/issues/30937
#  depends_on = [ null_resource.validation ]

}
